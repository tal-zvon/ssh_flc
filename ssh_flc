#!/bin/bash
#SSH Failed Login Checker

export PATH='/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'

#Only run if user is root
uid=$(/usr/bin/id -u) && [ "$uid" = "0" ] ||
{ echo "You must be root to run $0. Try again with the command 'sudo $0'" | fmt -w `tput cols`; exit 1; }

#Figure out all the log files of all the failed ssh login attempts
#that happened in the past 2 minutes
FAILED_LOGS=$(
	#Figure out what the epoch time was 2 minutes ago
	DATE_MINUS_2M=$(date -d "now-2minutes" +"%s")

	IFS=$'\n'
	sudo grep -i 'sshd' /var/log/auth.log | grep -i 'failed password' | for LINE in $(cat /dev/stdin)
	do
		#Figure out what the date on the log file we are looking at is in epoch time
		LOG_DATE=$(echo $LINE | awk '{print $1,$2,$3}' | date -d "`cat /dev/stdin`" +"%s")

		#Compare the 2 epoch dates
		if [[ $LOG_DATE -gt $DATE_MINUS_2M ]]
		then
			echo $LINE
		fi
	done
)

#Figure out how many different source IP addresses failed to login
#in the past 2 minutes
FAILED_IPs=$(echo "$FAILED_LOGS" | grep -Eo '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')

IFS=$'\n'
for IP in $(echo "$FAILED_IPs" | sort -u)
do
	#See how many failed logins the IP we are looking at had
	#in the past 2 minutes
	if [[ $(echo "$FAILED_IPs" | grep -c "^${IP}$") -ge 10 ]]
	then
		#$IP has made over 10 failed attempts to login in the past 10 minutes

		#Make sure $IP is not already blocked by iptables
		if ! iptables -nL INPUT | grep "[^0-9]$IP[^0-9]" | grep -q REJECT
		then
			iptables -A INPUT -s $IP -p tcp --dport 22 -j REJECT &&
			#Email root about the problem
			{
				echo '<html>'
				echo  "<b>$IP</b> is being blocked for 5 minutes from connecting to the ssh server. It has had over 10 failed connections in the past 2 minutes."
				echo -e "Here's the log:<br><br>"
				IFS=$'\n'
				for LOG in $(echo "$FAILED_LOGS" | grep "[^0-9]$IP[^0-9]")
				do
					#Figure out the user name in current log
					USERNAME=$(echo "$LOG" | grep -o 'Failed password for .* from' | sed 's/^Failed password for //g' | sed 's/^invalid user //g' | sed 's/ from$//g')
					#Make the user name and IP bold, and the username green in the logs
					echo $LOG | sed "s#\($USERNAME\)#<b>\1</b>#g" | sed "s#\($IP\)#<b>\1</b>#g" | sed 's%\(^.*\[[0-9]*\]:\)%<span style="color:#255F16">\1</span>%g'
					#New line
					echo "<br>"
				done
				echo '</html>'
			} | mail -a "Content-type: text/html;" -s "ssh_flc: unauthorized entry attempt" root@localhost ||
			{
				echo '<html>'
				echo "<b>$IP</b> should have been added to the iptables block list, but the command was <b>NOT successful.</b>"
				echo '</html>'
			} | mail -a "Content-type: text/html;" -s "ssh_flc: unauthorized entry attempt" root@localhost

			#Start a new thread that will unblock the IP after x seconds
			( sleep 300; iptables -D INPUT -s $IP -p tcp --dport 22 -j REJECT ) & 
		fi
	fi
done

exit 0
